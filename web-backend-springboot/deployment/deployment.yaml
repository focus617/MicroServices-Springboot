apiVersion: v1
kind: Namespace
metadata:
  name: springboot-deployment

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql-pv
spec:
  storageClassName: mysql-pv
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 1.1Gi
  hostPath:
    path: "/data/mysql-volume/"

---
# Define a 'Persistent Volume Claim'(PVC) for MySQL Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # name of PVC essential for identifying the storage data
  namespace: springboot-deployment
  labels:
    app: mysql
    tier: database
spec:
  storageClassName: mysql-pv
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    #This will tell kubernetes about the amount of space we are trying to claim.

---
# Deployment specification begins here
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-backend-springboot
  namespace: springboot-deployment
  labels:
    app: web-backend-springboot
    tier: database
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-backend-springboot
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: web-backend-springboot
        tier: database
    spec:
      containers:
      - name: mysql
        image: mysql
        imagePullPolicy: IfNotPresent
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: Alc@tel12
        - name: MYSQL_DATABASE
          value: mydatabase
        ports:
        - containerPort: 3307
          name: mysql
        volumeMounts:
        - mountPath: /var/lib/mysql
          name: mysql-persistence-storage
      - name: web-backend-springboot
        image: web-backend-springboot:1.0.1
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"
        ports:
          - containerPort: 8080
        env:                # Setting Environmental Variables
          - name: DB_HOST     # Setting Database host address
            value: mysql
          - name: DB_NAME     # Setting Database name
            value: mydatabase
          - name: DB_USERNAME # Setting Database username
            value: root
          - name: DB_PASSWORD # Setting Database password
            value: Alc@tel12
      volumes:
      - name: mysql-persistence-storage
        persistentVolumeClaim:
          claimName: mysql-pv-claim

---
# Define a 'Service' To Expose MySQL to Other Services
apiVersion: v1
kind: Service
metadata:
  name: mysql
  namespace: springboot-deployment
  labels:
    app: mysql
    tier: database
spec:
  selector:
    app: mysql
    tier: database
  ports:
  - protocol: TCP
    port: 3307
    targetPort: 3307

---
apiVersion: v1
kind: Service
metadata:
  name: web-backend-springboot
  namespace: springboot-deployment
  labels:
    app: web-backend-springboot
spec:
  selector:
    app: web-backend-springboot
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080

